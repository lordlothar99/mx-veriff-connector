// This file was generated by Mendix Studio Pro.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
// Special characters, e.g., é, ö, à, etc. are supported in comments.

package veriff.actions;

import java.security.InvalidKeyException;
import java.security.NoSuchAlgorithmException;
import javax.crypto.Mac;
import javax.crypto.spec.SecretKeySpec;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.webui.CustomJavaAction;

public class Java_HmacSHA256 extends CustomJavaAction<java.lang.String>
{
	private java.lang.String apiKey;
	private java.lang.String payload;

	public Java_HmacSHA256(IContext context, java.lang.String apiKey, java.lang.String payload)
	{
		super(context);
		this.apiKey = apiKey;
		this.payload = payload;
	}

	@java.lang.Override
	public java.lang.String executeAction() throws Exception
	{
		// BEGIN USER CODE
		String result = generateHmac256(this.payload, this.apiKey);
		return result;
		// END USER CODE
	}

	/**
	 * Returns a string representation of this action
	 * @return a string representation of this action
	 */
	@java.lang.Override
	public java.lang.String toString()
	{
		return "Java_HmacSHA256";
	}

	// BEGIN EXTRA CODE
	/**
	 * https://www.javacodemonk.com/create-hmacsha256-signature-in-java-3421c36d
	 */
	private static String generateHmac256(String message, String key) throws InvalidKeyException, NoSuchAlgorithmException {
        Mac mac = Mac.getInstance("HmacSHA256");
		mac.init(new SecretKeySpec(key.getBytes(), "HmacSHA256"));
		byte[] bytes = mac.doFinal(message.getBytes());
        return bytesToHex(bytes);   
    }

	private static String bytesToHex(byte[] bytes) {   
        final char[] hexArray = "0123456789abcdef".toCharArray();
        char[] hexChars = new char[bytes.length * 2];
        for (int j = 0, v; j < bytes.length; j++) {
            v = bytes[j] & 0xFF;
            hexChars[j * 2] = hexArray[v >>> 4];
            hexChars[j * 2 + 1] = hexArray[v & 0x0F];
        }
        return new String(hexChars);
    }
	
	public static void main(String[] args) throws Exception {
		String key = "abcdef12-abcd-abcd-abcd-abcdef012345";
		String payload = "{\"verification\":{\"callback\":\"https://veriff.com\",\"person\":{\"firstName\":\"John\",\"lastName\":\"Smith\"},\"document\":{\"type\":\"PASSPORT\",\"country\":\"EE\"},\"vendorData\":\"unique id of a user\",\"timestamp\":\"2016-05-19T08:30:25.597Z\"}}";
		String result = generateHmac256(payload, key);
		System.out.println("result ok ? " + "6af6d95822e19e9cc707aec55395d8d363ba2c7bc4625bc04ebeca0c7bf8cd67".equals(result));
	}
	// END EXTRA CODE
}
